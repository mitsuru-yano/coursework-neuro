// apiRequests.js

// ---------------------- 1Ô∏è‚É£ –ü–æ–≥–æ–¥–∞ (OpenWeatherMap) ----------------------
export const getWeather = async (city) => {
    const apiKey = 'YOUR_API_KEY' // –≤—Å—Ç–∞–≤—å —Å–≤–æ–π –∫–ª—é—á OpenWeatherMap
    try {
        const res = await fetch(
            `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`
        )
        const data = await res.json()
        return `–ü–æ–≥–æ–¥–∞ –≤ ${city}: ${data.weather[0].description}, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${data.main.temp}¬∞C`
    } catch (err) {
        return `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã: ${err.message}`
    }
}

// ---------------------- 2Ô∏è‚É£ –°–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞ (JokeAPI) ----------------------
export const getJoke = async () => {
    try {
        const res = await fetch('https://v2.jokeapi.dev/joke/Any')
        const data = await res.json()
        if (data.type === 'single') return data.joke
        return `${data.setup} ... ${data.delivery}`
    } catch (err) {
        return `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à—É—Ç–∫–∏: ${err.message}`
    }
}

// ---------------------- 3Ô∏è‚É£ –ö—É—Ä—Å –≤–∞–ª—é—Ç (ExchangeRate API) ----------------------
export const getExchangeRates = async (base = 'USD', symbols = ['EUR', 'GBP']) => {
    try {
        const res = await fetch(
            `https://api.exchangerate.host/latest?base=${base}&symbols=${symbols.join(',')}`
        )
        const data = await res.json()
        const rates = symbols.map((sym) => `${sym}: ${data.rates[sym]}`).join(', ')
        return `–ö—É—Ä—Å –≤–∞–ª—é—Ç –¥–ª—è ${base}: ${rates}`
    } catch (err) {
        return `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç: ${err.message}`
    }
}

// ---------------------- 4Ô∏è‚É£ –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç (Numbers API) ----------------------
export const getNumberFact = async () => {
    try {
        const number = Math.floor(Math.random() * 100)
        const res = await fetch(`http://numbersapi.com/${number}`)
        const text = await res.text()
        return text
    } catch (err) {
        return `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–∞: ${err.message}`
    }
}

// ---------------------- 5Ô∏è‚É£ –ù–æ–≤–æ—Å—Ç–∏ (NewsAPI) ----------------------
export const getNews = async (category = 'technology') => {
    const apiKey = 'YOUR_API_KEY' // –≤—Å—Ç–∞–≤—å —Å–≤–æ–π –∫–ª—é—á NewsAPI
    try {
        const res = await fetch(
            `https://newsapi.org/v2/top-headlines?country=us&category=${category}&apiKey=${apiKey}`
        )
        const data = await res.json()
        return data.articles.length > 0 ? data.articles[0].title : '–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
    } catch (err) {
        return `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π: ${err.message}`
    }
}

// ---------------------- 6Ô∏è‚É£ –§–æ—Ç–æ –¥–Ω—è –æ—Ç NASA ----------------------
export const getNasaPhoto = async () => {
    try {
        const res = await fetch('https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY')
        const data = await res.json()
        return `${data.title}: ${data.url}`
    } catch (err) {
        return `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ NASA: ${err.message}`
    }
}

// ---------------------- 7Ô∏è‚É£ –ü–µ—Ä–µ–≤–æ–¥ (LibreTranslate) ----------------------
export const translateText = async (text, target = 'ru') => {
    try {
        const res = await fetch('https://libretranslate.com/translate', {
            method: 'POST',
            body: JSON.stringify({ q: text, source: 'en', target }),
            headers: { 'Content-Type': 'application/json' },
        })
        const data = await res.json()
        return data.translatedText
    } catch (err) {
        return `–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: ${err.message}`
    }
}

// ---------------------- 8Ô∏è‚É£ –ü–æ–≥–æ–¥–∞ –Ω–∞ –ú–∞—Ä—Å–µ (Open-Meteo Mars) ----------------------
export const getMarsWeather = async () => {
    try {
        const res = await fetch(
            'https://api.open-meteo.com/v1/mars?latitude=4.5&longitude=137.4&daily=temperature_2m_max'
        )
        const data = await res.json()
        return `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –ú–∞—Ä—Å–µ —Å–µ–≥–æ–¥–Ω—è: ${data.daily.temperature_2m_max[0]}¬∞C`
    } catch (err) {
        return `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –Ω–∞ –ú–∞—Ä—Å–µ: ${err.message}`
    }
}

// ---------------------- 9Ô∏è‚É£ –°–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ç–∏–∫–∞ (The Cat API) ----------------------
export const getCatImage = async () => {
    try {
        const res = await fetch('https://api.thecatapi.com/v1/images/search')
        const data = await res.json()
        return data[0].url
    } catch (err) {
        return `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ç–∏–∫–∞: ${err.message}`
    }
}

// ---------------------- üîü –°–ª—É—á–∞–π–Ω—ã–π —Å–æ–≤–µ—Ç (Advice Slip API) ----------------------
export const getAdvice = async () => {
    try {
        const res = await fetch('https://api.adviceslip.com/advice')
        const data = await res.json()
        return data.slip.advice
    } catch (err) {
        return `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–µ—Ç–∞: ${err.message}`
    }
}
